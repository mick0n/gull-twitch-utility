<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Gull - Twitch utility</title>
	<style>
		body {
			margin: 0;
			padding: 0;
			border: 0;
			width: 100%;
			font-family: sans-serif;
			font-size: 24px;
		}

		.event-row {
			display: flex;
			width: 100%;
			min-height: 40px;
			margin-bottom: 1px;
		}

		.event-row--title {
			flex: 0 0 150px;
			align-self: center;
			padding-left: 10px;
			font-weight: bold;
		}

		.event-row--data {
			flex: 1;
			align-self: center;
		}

		.event-row.chat {
			background-color: #ffa6f1;
		}

		.event-row.notification {
			background-color: #c3ffd0;
		}

		.event-row.viewer {
			background-color: #ffeebc;
		}
	</style>
	<script type="text/javascript" src="/pub/jquery-3.1.0.min.js"></script>
	<script type="text/javascript" src="/pub/underscore-min.js"></script>
</head>
<body>
	<div class="action-bar">
	</div>
	<div class="event-area">
		<div class="event-row chat"></div>
		<div class="event-row notification"></div>
		<div class="event-row viewer"></div>
	</div>
	<script type="text/template" id="event-row-template">
		<div class="event-row {{ type }}">
			<div class="event-row--title">
				{{ type }}
			</div>
			<div class="event-row--data">
				{{ message }}
			</div>
		</div>
	</script>
	<script type="text/javascript">
		_.templateSettings = {
			interpolate: /\{\{(.+?)\}\}/g
		};

		var socket;
		function connect() {
			socket = new WebSocket('ws://' + window.location.hostname + ':8002');
			socket.onclose = function() {
				setTimeout(connect, 7000);
			}
			socket.onmessage = function(message) {
				var messageData = JSON.parse(message.data);
				console.log(messageData);
				var templateFn = _.template($('#event-row-template').html());
				$('.event-area').append(templateFn({type: messageData.type, message: convertMessage(messageData)}));
				$('body').scrollTop($(document).height());
			}
		}
		connect();

		function convertMessage(messageData) {
			switch (messageData.type) {
				case 'chat': return messageData.from + ': ' + messageData.message;
				default: return messageData.message;
			}
		}
	</script>
</body>
</html>